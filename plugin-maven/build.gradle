plugins {
    id 'java'
    id 'com.github.dkorotych.gradle-maven-exec' version '2.2.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
    from sourceSets.main.output
    from project.findProject(':plugin-core').sourceSets.main.output
}

apply from: '../gradle/publication-maven.gradle'

dependencies {
    implementation project.findProject(':plugin-core').sourceSets.main.output

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    implementation libs.ymlSnake
    implementation 'org.apache.maven:maven-plugin-api:3.6.3'
    implementation 'org.apache.maven:maven-model:3.6.3'

    compileOnly 'org.apache.maven:maven-project:2.2.1'
    compileOnly 'org.apache.maven.plugins:maven-plugin-plugin:3.6.0'
    implementation 'org.apache.maven.plugin-tools:maven-plugin-tools-annotations:3.6.0'
    implementation 'org.apache.maven.plugin-tools:maven-plugin-tools-generators:3.6.0'
    annotationProcessor 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.6.0'

    testImplementation 'org.apache.maven.plugin-testing:maven-plugin-testing-harness:3.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
}

test {
    useJUnitPlatform()
}

task pluginDescriptor(type: MavenExec) {
    group 'publishing'
    goals 'org.apache.maven.plugins:maven-plugin-plugin:3.6.0:descriptor'
    options {
        define = [
                'groupId'   : project.group,
                'artifactId': project.artifactId,
                'version'   : project.version
        ]
    }
    doFirst {
        def pom = file('pom.xml').text
        pom = pom.replaceFirst("<version>(.*)</version>", "<version>${project.version}</version>")
        pom = pom.replaceFirst("<groupId>(.*)</groupId>", "<groupId>${project.group}</groupId>")
        pom = pom.replaceFirst("<artifactId>(.*)</artifactId>", "<artifactId>${project.artifactId}</artifactId>")
        file('pom.xml').write(pom)
    }
}

jar.dependsOn(pluginDescriptor)
